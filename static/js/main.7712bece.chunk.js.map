{"version":3,"sources":["components/FRQBox.js","components/MCQBoxOption.js","components/MCQBox.js","context/reducer.js","components/CreateEvent.js","firebaseConfig.js","context/eventReducer.js","components/Header.js","components/EventInfoBox.js","components/Dashboard.js","components/EventDash.js","App.js","reportWebVitals.js","context/store.js","index.js"],"names":["FRQBox","id","callBack","useState","val","setVal","className","type","value","onChange","e","input","target","MCQBoxOption","MCQBox","name","setName","numOptions","setNumOptions","updateData","index","temp","updateName","options","i","push","generateOptions","onClick","incrementOptions","userSlice","createSlice","initialState","reducers","setUser","state","action","payload","clearUser","actions","selectUser","users","CreateEvent","useSelector","numFRQ","setNumFRQ","frqs","numMCQ","setNumMCQ","mcqs","frqData","setFRQData","mcqData","setMCQData","frqCallback","childData","copy","console","log","mcqCallBack","fq","FRQS","MCQS","event","date","Date","fieldQuestions","responses","setDate","onSubmit","axios","post","then","res","data","catch","err","error","selected","getFRQs","getMCQs","pop","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","eventsSlice","setEvents","clearEvents","selectEvents","events","Header","user","dispatch","useDispatch","newUser","displayName","email","photo","get","length","photoURL","alert","createNewUser","Button","variant","color","signInWithPopup","currUser","message","Avatar","src","EventInfoBox","setEmail","setPhoto","useEffect","matchings","match","getAvatar","classame","Dashboard","eventList","EventDash","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","eventsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7712bece.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport \"./FRQBox.css\";\r\n\r\nfunction FRQBox({ id, callBack}) {\r\n    const [val, setVal] = useState(\"\");\r\n\r\n    const updateData = (input) => {\r\n        setVal(input);\r\n        callBack(input, id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"frqBox\">\r\n            <label>Free Response Question:</label>\r\n            <input type=\"text\" value={val} onChange={(e) => updateData(e.target.value)}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FRQBox\r\n","import React, {useState} from 'react'\r\n\r\nfunction MCQBoxOption( {id, callBack}) {\r\n    const [val, setVal] = useState(\"\");\r\n    const updateData = (value) => {\r\n        setVal(value);\r\n        callBack(val, id);\r\n    }\r\n    return (\r\n        <div className=\"mcqBoxOption\">\r\n            <label>Option: </label>\r\n            <input type=\"text\" value={val} onChange={(e) => updateData(e.target.value)}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MCQBoxOption\r\n","import React, { useState } from 'react';\r\nimport MCQBoxOption from \"./MCQBoxOption\";\r\n\r\nfunction MCQBox( {id, callBack} ) {\r\n    const [name, setName] = useState(\"\");\r\n    const [val, setVal] = useState([]);\r\n    const [numOptions, setNumOptions] = useState(0);\r\n    const options = [];\r\n\r\n    const generateOptions = (options) => {\r\n        for (let i = 0; i < numOptions; i++) {\r\n            options.push(<MCQBoxOption id={i+1} key={i+1} callBack={updateData}></MCQBoxOption>);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    const updateName = (input, index) => {\r\n        setName(input);\r\n        const temp = val;\r\n        temp[index] = input;\r\n        setVal(temp);\r\n        callBack(val, id);\r\n    }\r\n\r\n    const updateData = (input, index) => {\r\n        const temp = val;\r\n        temp[index] = input;\r\n        setVal(temp);\r\n        callBack(val, id);\r\n    }\r\n\r\n    const incrementOptions = () => {\r\n        setNumOptions(numOptions + 1);\r\n        const temp = val;\r\n        temp.push(\"\");\r\n        setVal(temp);\r\n    }\r\n\r\n    const decrementOptions = () => {\r\n        if (numOptions > 0) {\r\n            setNumOptions(numOptions - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mcqBox\">\r\n            <label>Multiple Choice Question</label>\r\n            <input type=\"text\" value={name} onChange={(e) => updateName(e.target.value, 0)}></input>\r\n            {generateOptions(options)}\r\n            <button type=\"button\" onClick={() => incrementOptions()}>Add Option</button>\r\n            <button type=\"button\" onClick={() => decrementOptions()}>Remove Option</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MCQBox\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        value: null\r\n    },\r\n    reducers: {\r\n        setUser: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n        clearUser: (state) => {\r\n            state.value = null;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setUser, clearUser } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.users.value;\r\n\r\nexport default userSlice.reducer;","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./InfoForm.css\";\r\nimport FRQBox from \"./FRQBox\";\r\nimport MCQBox from \"./MCQBox\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUser, clearUser, selectUser } from '../context/reducer';\r\n\r\nfunction CreateEvent() {\r\n    const user = useSelector(selectUser);\r\n    // state for number of frq questions\r\n    const [numFRQ, setNumFRQ] = useState(0);\r\n    // array to hold frqBox components\r\n    const frqs = [];\r\n\r\n    // state for number of mcq questions\r\n    const [numMCQ, setNumMCQ] = useState(0);\r\n    // array to hold mcqBox components\r\n    const mcqs = [];\r\n\r\n    // array to hold data for frqs and mcqs\r\n    const [frqData, setFRQData] = useState([]);\r\n    const [mcqData, setMCQData] = useState([]);\r\n\r\n    const frqCallback = (childData, id) => {\r\n        const copy = frqData;\r\n        copy[id] = childData;\r\n        setFRQData(copy);\r\n        console.log(frqData);\r\n    }\r\n\r\n    const mcqCallBack = (childData, id) => {\r\n        const copy = mcqData;\r\n        copy[id] = childData;\r\n        setMCQData(copy);\r\n        console.log(mcqData);\r\n    }\r\n\r\n    const getFRQs = (frqs) => {\r\n        for (let i = 0; i < numFRQ; i++) {\r\n            frqs.push(<FRQBox key={i} id={i} callBack={frqCallback} />);\r\n        }\r\n        return frqs;\r\n    }\r\n\r\n    const getMCQs = (mcqs) => {\r\n        for (let i = 0; i < numMCQ; i++) {\r\n            mcqs.push(<MCQBox key={i} id={i} callBack={mcqCallBack}></MCQBox>);\r\n        }\r\n        return mcqs;\r\n    }\r\n\r\n    const decrementFRQ = () => {\r\n        if (numFRQ - 1 >= 0) {\r\n            setNumFRQ(numFRQ - 1);\r\n        }\r\n        frqs.pop();\r\n    }\r\n\r\n    const decrementMCQ = () => {\r\n        if (numMCQ - 1 >= 0) {\r\n            setNumMCQ(numMCQ - 1);\r\n        } \r\n        mcqs.pop();\r\n    }\r\n\r\n    const fq = {\r\n        FRQS: [],\r\n        MCQS: [],\r\n    }\r\n\r\n    const event = {\r\n        name: \"\",\r\n        date: new Date(),\r\n        fieldQuestions: fq,\r\n        responses: []\r\n    };\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const onSubmit = () => {\r\n        event.name = name;\r\n        event.date = date;\r\n        for (let i = 0; i < numFRQ; i++) {\r\n            fq.FRQS.push(frqData[i]);\r\n        }\r\n        for (let i = 0; i < numMCQ; i++) {\r\n            fq.MCQS.push(mcqData[i]);\r\n        }\r\n        event.fieldQuestions = fq;\r\n        axios.post(\"https://warm-dusk-08113.herokuapp.com/events/add\", event)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n\r\n   return (\r\n        <div className=\"infoForm\">\r\n            <div className=\"infoForm__questions\">\r\n            <form onSubmit={onSubmit}>\r\n                <label>Name of Event</label>\r\n                <input type=\"text\" value={name} onChange={e => setName(e.target.value)}></input>\r\n                <label>Date</label>\r\n                <DatePicker selected = {date} onChange={(date) => setDate(date)}></DatePicker>\r\n                {getFRQs(frqs)}\r\n                {getMCQs(mcqs)}\r\n                <input type=\"submit\" value=\"create event\"></input>\r\n            </form>\r\n            </div>\r\n            <div className=\"infoForm__configure\">\r\n            <label>Number of Free Response Questions</label>\r\n            <div className=\"infoForm__counter\">\r\n                <button onClick={() => decrementFRQ()}>-</button>\r\n                <div className=\"infoForm__frqcounter__display\">{numFRQ}</div>\r\n                <button onClick={() => setNumFRQ(numFRQ + 1)}>+</button>\r\n            </div>\r\n            <label>Number of Multiple Choice Questions</label>\r\n            <div className=\"infoForm__counter\">\r\n                <button onClick={() => decrementMCQ()}>-</button>\r\n                <div className=\"infoForm__mcqcounter__display\">{numMCQ}</div>\r\n                <button onClick={() => setNumMCQ(numMCQ + 1)}>+</button>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CreateEvent;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCKgVIJPSWwL4qfoldNXS5AzfYjbk-hX18\",\r\n  authDomain: \"matching-algo.firebaseapp.com\",\r\n  projectId: \"matching-algo\",\r\n  storageBucket: \"matching-algo.appspot.com\",\r\n  messagingSenderId: \"12690948043\",\r\n  appId: \"1:12690948043:web:1025f31f3dd13d68d2404e\",\r\n  measurementId: \"G-5CVH8P5SPJ\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const eventsSlice = createSlice({\r\n    name: 'events',\r\n    initialState: {\r\n        value: []\r\n    },\r\n    reducers: {\r\n        setEvents: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n        clearEvents: (state) => {\r\n            state.value = [];\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setEvents, clearEvents } = eventsSlice.actions;\r\n\r\nexport const selectEvents = state => state.events.value;\r\n\r\nexport default eventsSlice.reducer;","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {auth, provider} from \"../firebaseConfig\";\r\nimport {selectUser, setUser, clearUser} from \"../context/reducer\";\r\nimport { setEvents, clearEvents} from \"../context/eventReducer\"; \r\nimport axios from 'axios';\r\nimport \"./Header.css\";\r\nimport {Avatar, Button} from \"@material-ui/core\";\r\n\r\n\r\n\r\nfunction Header() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch(); \r\n   \r\n    const newUser = {\r\n        displayName: \"\",\r\n        email: \"\",\r\n        photo: \"\",\r\n        events: []\r\n    }\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then( res => {\r\n            console.log(res.user);\r\n            const currUser = {\r\n                email: res.user.email,\r\n                name: res.user.displayName,\r\n                photoURL: res.user.photoURL,\r\n            }\r\n            dispatch(setUser(currUser));\r\n        }).catch( (err) => alert(err.message));\r\n\r\n    }\r\n\r\n    const signOut= () => {\r\n        dispatch(clearUser());\r\n        dispatch(clearEvents());\r\n    }\r\n\r\n    const createNewUser = (user) => {\r\n        newUser.displayName = user.name;\r\n        newUser.email = user.email;\r\n        newUser.photo = user.photoURL;\r\n        newUser.events = [];\r\n        console.log(newUser);\r\n        axios.post(\"https://warm-dusk-08113.herokuapp.com/users/add\", newUser)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => alert(err));\r\n\r\n    }\r\n\r\n    const fetchLogin = () => {\r\n        if (user) {\r\n            axios.get(\"https://warm-dusk-08113.herokuapp.com/users/getUser/\" + user.email)\r\n                .then(res => {\r\n                    if (res.data.length > 0){\r\n                        dispatch(setEvents(res.data[0].events));\r\n                    } else {\r\n                        console.log(\"creating new user\");\r\n                        createNewUser(user);\r\n                    }})\r\n                .catch(err => alert(err));\r\n            return (<>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => signOut()}>sign out</Button>\r\n            </>)\r\n        } else {\r\n            return (<Button variant=\"contained\" color=\"primary\" onClick={() => signIn()}>sign in</Button>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Buddy Match</h1>\r\n            {fetchLogin()}\r\n            <div className=\"avatarBox\">\r\n                {user ? (<Avatar src={user.photoURL}/>) : <Avatar />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport \"./EventInfoBox.css\";\r\nimport {selectUser} from \"../context/reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\nfunction EventInfoBox( {id}) {\r\n    const [name, setName] = useState(\"No Match\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const user = useSelector(selectUser);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://warm-dusk-08113.herokuapp.com/matchings/getMatch/\" + id)\r\n            .then(res => {\r\n                for (let i = 0; i < res.data.matchings.length; i++) {\r\n                    if (res.data.matchings[i].email == user.email) {\r\n                        setName(res.data.matchings[i].match.name);\r\n                        setEmail(res.data.matchings[i].match.email);\r\n                        getAvatar(res.data.matchings[i].match.email);\r\n                        break;\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => alert(err));\r\n    });\r\n\r\n    const getAvatar = (email) => {\r\n            axios.get(\"https://warm-dusk-08113.herokuapp.com/users/getUser/\" + email)\r\n                .then(res => {\r\n                    if (res.data.length !== 0) {\r\n                        setPhoto(res.data[0].photo);\r\n                    }\r\n                })\r\n                .catch(err => alert(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"eventInfoBox\">\r\n            <Avatar src={photo} />\r\n            <div classame=\"text\">\r\n                <h2>{name}</h2>\r\n                <h3>{email}</h3>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default EventInfoBox\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../context/reducer';\r\nimport { selectEvents } from \"../context/eventReducer\";\r\nimport \"./Dashboard.css\";\r\nimport EventInfoBox from \"./EventInfoBox\";\r\n\r\nfunction Dashboard() {\r\n    const user = useSelector(selectUser);\r\n    const events = useSelector(selectEvents);\r\n    const eventList = [];\r\n\r\n    const generateEvents = () => {\r\n        if (user) {\r\n            eventList.push(<EventInfoBox key=\"a\" id=\"6028f004837df47dd66b94f3\"></EventInfoBox>);\r\n            eventList.push(<EventInfoBox key=\"b\" id=\"60290bf9b195a72841c33a89\"></EventInfoBox>);\r\n        }\r\n       return eventList;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            {user ? (<h2>Matches:</h2>) : (<h2>Sign In to See Events</h2>)}\r\n            {generateEvents()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\n\r\nfunction EventDash() {\r\n\r\n    return (\r\n        <div className=\"eventDash\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventDash\r\n","import './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Header from \"./components/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport EventDash from \"./components/EventDash\";\n\nfunction App() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Router>\n         <Route path=\"/create\" component={CreateEvent}></Route>\n         <Route path=\"/\" exact component={Dashboard}></Route>\n         <Route path=\"/event\" component={EventDash}></Route>\n        </Router>\n      </div>\n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from './reducer.js';\r\nimport eventsReducer from './eventReducer.js';\r\n\r\nconst store = configureStore({ reducer: {\r\n    users: userReducer,\r\n    events: eventsReducer\r\n} });\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './context/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}